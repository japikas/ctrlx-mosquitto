name: mosquitto
title: Mosquitto MQTT
version: 2.0.18
summary: Mosquitto MQTT broker for ctrlX
description: This is a message broker that supports version 5.0, 3.1.1, and 3.1 of the MQTT
    protocol.
    MQTT provides a method of carrying out messaging using a publish/subscribe
    model. It is lightweight, both in terms of bandwidth usage and ease of
    implementation. This makes it particularly useful at the edge of the network
    where a sensor or other simple device may be implemented using an arduino for
    example.
confinement: strict
grade: stable
base: core22
type: app

apps:
  mosquitto:
    command: launcher.sh
    daemon: simple
    restart-condition: always
    plugs: [home, network, network-bind]
    passthrough:
      restart-delay: 10s

  ctrl:
    command: usr/bin/mosquitto_ctrl
    plugs: [home, network]

  pub:
    command: usr/bin/mosquitto_pub
    plugs: [home, network]

  rr:
    command: usr/bin/mosquitto_rr
    plugs: [home, network]

  sub:
    command: usr/bin/mosquitto_sub
    plugs: [home, network]

  passwd:
    command: usr/bin/mosquitto_passwd
    plugs: [home]


parts:
  script:
    plugin: dump
    source: snap/local/
    prime:      
      - launcher.sh
      - default_config.conf

  mosquitto:
    after:
      - lws
    plugin: make
    make-parameters: ["prefix=/usr", "WITH_WEBSOCKETS=yes", "WITH_ADNS=yes", "CFLAGS=-Wall -I$SNAPCRAFT_STAGE/include"]
    source: https://github.com/eclipse/mosquitto
    source-type: git

    build-packages:
      - libssl-dev
      - xsltproc
      - docbook-xsl
      - gcc
      - g++
      - libwebsockets-dev
    stage-packages:
      - libcjson1
      - libev4
      - libuv1
      - libwebsockets16
      - libssl3
      - ca-certificates
    prime:
      - usr/sbin/mosquitto
      - usr/bin/mosquitto_ctrl
      - usr/bin/mosquitto_pub
      - usr/bin/mosquitto_rr
      - usr/bin/mosquitto_sub
      - usr/bin/mosquitto_passwd
      - usr/lib/libmosquitto.so*
      - usr/lib/mosquitto_dynamic_security.so*
      - lib/*-linux-gnu/libcrypto.so*
      - lib/*-linux-gnu/libssl.so*
      - usr/lib/*-linux-gnu/libssl.so*
      - usr/lib/*-linux-gnu/libcjson.so*
      - usr/lib/*-linux-gnu/libwebsockets.so*
      - usr/lib/*-linux-gnu/libev.so*
      - usr/lib/*-linux-gnu/libuv.so*            
      - usr/include/mosquitto.h
      - usr/include/mosquitto_broker.h
      - usr/include/mosquitto_plugin.h
      - usr/include/mqtt_protocol.h
      
  lws:
    after:
      - cjson
    plugin: cmake
    cmake-parameters: ["-DLWS_IPV6=ON", "-DLWS_WITHOUT_CLIENT=ON", "-DLWS_WITHOUT_EXTENSIONS=ON", "-DLWS_WITH_ZIP_FOPS=OFF", "-DLWS_WITH_ZLIB=OFF", "-DLWS_WITH_SHARED=OFF","-DCMAKE_C_FLAGS=-Wno-error"]
    source: https://github.com/warmcat/libwebsockets/archive/v2.4.2.tar.gz
    source-type: tar
    stage:
      - usr/local/include/libwebsockets.h
      - usr/local/include/lws_config.h
      - usr/local/lib/libwebsockets.a
    prime: [-*]

  cjson:
    plugin: cmake
    cmake-parameters: ["-DCMAKE_C_FLAGS=-fPIC", "-DBUILD_SHARED_AND_STATIC_LIBS=OFF", "-DBUILD_SHARED_LIBS=OFF", "-DCJSON_BUILD_SHARED_LIBS=OFF", "-DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF"]
    source: https://github.com/DaveGamble/cJSON/archive/v1.7.14.tar.gz
    source-type: tar
    stage:
      - usr/local/include/cjson/cJSON.h
      - usr/local/lib/libcjson.a
    prime: [-*]

  configs:
      plugin: dump
      source: ./configs
      organize:
        'package-assets/*': package-assets/${SNAPCRAFT_PROJECT_NAME}/

slots: 
  package-assets:
      interface: content
      content: package-assets
      source:
        read:
        - $SNAP/package-assets/${SNAPCRAFT_PROJECT_NAME}

plugs:
  active-solution:
    interface: content
    content: solutions
    target: $SNAP_DATA/solutions
